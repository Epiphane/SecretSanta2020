define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Load = exports.Pause = exports.Play = exports.MuteSfx = exports.MuteMusic = void 0;
    var Sounds = {};
    class MultiSampleSound {
        constructor(src, loop, samples, volume) {
            this.elements = [];
            this.volume = 1;
            this.index = 0;
            for (var i = 0; i < samples; i++) {
                var sound = document.createElement('audio');
                sound.volume = volume || 1;
                sound.loop = loop;
                var source = document.createElement("source");
                source.src = src;
                sound.appendChild(source);
                sound.load();
                this.elements.push(sound);
            }
        }
        play() {
            this.elements[this.index].play();
            this.index = (this.index + 1) % this.elements.length;
        }
        pause() {
            this.elements.forEach(el => el.pause());
        }
        stop() {
            this.elements.forEach(el => {
                el.pause();
                el.currentTime = 0;
            });
        }
    }
    function MuteMusic() {
        for (var key in Sounds) {
            Sounds[key].elements.forEach(function (element) {
                if (element.loop) {
                    element.volume = 0;
                }
            });
        }
    }
    exports.MuteMusic = MuteMusic;
    function MuteSfx() {
        for (var key in Sounds) {
            Sounds[key].elements.forEach(function (element) {
                if (!element.loop) {
                    element.volume = 0;
                }
            });
        }
    }
    exports.MuteSfx = MuteSfx;
    function Play(name) {
        Sounds[name].play();
    }
    exports.Play = Play;
    function Pause(name) {
        Sounds[name].pause();
    }
    exports.Pause = Pause;
    function Load(name, src, loop, samples, volume) {
        Sounds[name] = new MultiSampleSound(src, !!loop, samples || 1, volume || 1);
    }
    exports.Load = Load;
});
//# sourceMappingURL=juicy.sound.js.map